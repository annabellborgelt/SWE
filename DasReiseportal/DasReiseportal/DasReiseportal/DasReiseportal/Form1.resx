<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        q4sngd3UweprqfuFmar6nK9Ok/5xqgsF9zwzUAfEug+4brd7bvps6v6dpVYXQNYFYXVQr4WD9lwopp4p
        UP95/ff1v6v/fffvTNlt0rZ6SOr2yZTVWau6C6E+Drtu2vO2urrmoz76qbXv35ymvlZh7E5Lz0h1i109
        xW73gafu1LlG+pVUy06fnFZ9RuM9CWg8MnW/NKusTnvX1c116rT779e9+vzx8////3b//Sp7TdpmdXBa
        xTUWF9d3Uv1MTLXgzdzVNQt1Vuz83f6zuarhA2jUH8SPpO4XR5tVnXKdaznjJalrSbr9o81r2wdeuFh3
        S90vjzarVS7osnT1+XW3j7Q51cB74wSLcp/05IX1vdT9Emlzen7qvvfb2FJuJdV01bNJuu/9NlTXmrBQ
        Uy5LKkna7m6XWCgDgCRpqgwAC2YAkCRNlQFgwQwAkqSpMgAsmAFAkjRVBoAFMwBIkqbKALBgBgBJ0lQZ
        ABbMACBJmioDwIIZACRJU2UAWDADgCRpqgwAC2YAkCRNlQFgwQwAkqSpMgAsmAFAkjRVBoAFMwBIkqbK
        ALBgBgBJ0lQZABbMACBJmioDwIIZACRJU2UAWDADgCRpqgwAC2YAkCRNlQFgwQwAkqSpMgAs2JPSKZIk
        TdAtEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABr4BKX+H9Iq8MsHZTsXAAAAABJRU5ErkJggg==
</value>
  </data>
</root>