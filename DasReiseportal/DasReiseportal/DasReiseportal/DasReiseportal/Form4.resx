<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AGvgEpf4f0irwywdlOxcAAAAAElFTkSuQmCC
</value>
  </data>
</root>